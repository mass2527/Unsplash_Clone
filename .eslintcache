[{"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\index.tsx":"1","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\reportWebVitals.ts":"2","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\App.tsx":"3","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Header\\Header.tsx":"4","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Main\\Main.tsx":"5","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\axios\\axios.tsx":"6","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\shared\\Photo\\Photo.tsx":"7","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\shared\\UserImageAndName\\UserImageAndName.tsx":"8","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\config\\secret.ts":"9","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\shared\\UserImageAndName\\UserProfile.tsx":"10","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\shared\\Material-UI\\Button.tsx":"11","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\pages\\Home.tsx":"12","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Modal\\Modal.tsx":"13","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Modal\\PhotoMiddle.tsx":"14","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Modal\\PhotoFooter.tsx":"15","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Modal\\RelatedCollections.tsx":"16","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Modal\\Collection.tsx":"17"},{"size":500,"mtime":1610441634819,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":359,"mtime":1610372597196,"results":"21","hashOfConfig":"19"},{"size":1461,"mtime":1610524375176,"results":"22","hashOfConfig":"19"},{"size":3927,"mtime":1610524303283,"results":"23","hashOfConfig":"19"},{"size":536,"mtime":1610470868711,"results":"24","hashOfConfig":"19"},{"size":3305,"mtime":1610519409900,"results":"25","hashOfConfig":"19"},{"size":2235,"mtime":1610448252666,"results":"26","hashOfConfig":"19"},{"size":72,"mtime":1610362781983,"results":"27","hashOfConfig":"19"},{"size":2828,"mtime":1610517120077,"results":"28","hashOfConfig":"19"},{"size":383,"mtime":1610517175348,"results":"29","hashOfConfig":"19"},{"size":647,"mtime":1610372589941,"results":"30","hashOfConfig":"19"},{"size":3881,"mtime":1610464729692,"results":"31","hashOfConfig":"19"},{"size":1980,"mtime":1610463859300,"results":"32","hashOfConfig":"19"},{"size":743,"mtime":1610455125248,"results":"33","hashOfConfig":"19"},{"size":1945,"mtime":1610465852192,"results":"34","hashOfConfig":"19"},{"size":3422,"mtime":1610465193934,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"851nlt",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\index.tsx",[],["74","75"],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\reportWebVitals.ts",[],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\App.tsx",[],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Header\\Header.tsx",[],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Main\\Main.tsx",["76"],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\axios\\axios.tsx",[],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\shared\\Photo\\Photo.tsx",["77"],"import React, { useEffect, useState, MouseEvent, useRef, memo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport UserImageAndName from '../UserImageAndName/UserImageAndName';\r\n\r\nconst S = {\r\n  Photo: styled.div<{ color: string; isLoading: boolean }>`\r\n    cursor: zoom-in;\r\n    position: relative;\r\n    background-color: ${({ isLoading, color }) => (isLoading ? color : 'transparent')};\r\n  `,\r\n\r\n  Image: styled.img<{ isLoading: boolean }>`\r\n    width: 100%;\r\n    object-fit: contain;\r\n    display: block;\r\n    opacity: ${({ isLoading }) => (isLoading ? '0' : '1')};\r\n  `,\r\n\r\n  Overlay: styled.div<{ isLoading: boolean }>`\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    top: 0;\r\n    background: linear-gradient(to bottom, rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.4));\r\n    opacity: 0;\r\n    transition: opacity 0.1s ease-in-out;\r\n    display: ${({ isLoading }) => (isLoading ? 'none' : 'grid')};\r\n    place-items: end start;\r\n\r\n    :hover {\r\n      opacity: 1;\r\n    }\r\n\r\n    @media (max-width: 768px) {\r\n      :hover {\r\n        opacity: 0;\r\n      }\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  imageURL: string;\r\n  userImageURL: string;\r\n  userName: string;\r\n  accountName?: string;\r\n  bio?: string;\r\n  portfolio_url?: string;\r\n  id: string;\r\n  color: string;\r\n}\r\n\r\nconst Photo: React.FC<Props> = ({ imageURL, userImageURL, userName, accountName, bio, portfolio_url, id, color }) => {\r\n  const [windowInnerWidth, setWindowInnerWidth] = useState(window.innerWidth);\r\n  const photoRef = useRef<HTMLDivElement | null>(null);\r\n  const history = useHistory();\r\n  const imageRef = useRef<HTMLImageElement | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function handleResize() {\r\n    setWindowInnerWidth(window.innerWidth);\r\n  }\r\n\r\n  function handleLoad() {\r\n    setLoading(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    imageRef.current?.addEventListener('load', handleLoad);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      imageRef.current?.removeEventListener('load', handleLoad);\r\n    };\r\n  }, []);\r\n\r\n  function clickPhoto(e: MouseEvent<HTMLDivElement>) {\r\n    if (e.target !== photoRef.current) return;\r\n\r\n    history.push(`/photos/${id}`, {\r\n      photoId: id,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {windowInnerWidth <= 768 && (\r\n        <UserImageAndName\r\n          userImageURL={userImageURL}\r\n          userName={userName}\r\n          accountName={accountName}\r\n          profileOption\r\n          bio={bio}\r\n          portfolio_url={portfolio_url}\r\n        />\r\n      )}\r\n      <S.Photo isLoading={loading} color={color} onClick={clickPhoto}>\r\n        <S.Image isLoading={loading} ref={imageRef} className=\"Image\" src={imageURL} />\r\n        <S.Overlay isLoading={loading} ref={photoRef}>\r\n          {windowInnerWidth > 768 && (\r\n            <UserImageAndName\r\n              userImageURL={userImageURL}\r\n              userName={userName}\r\n              accountName={accountName}\r\n              profileOption\r\n              bio={bio}\r\n              portfolio_url={portfolio_url}\r\n            />\r\n          )}\r\n        </S.Overlay>\r\n      </S.Photo>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(Photo);\r\n","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\shared\\UserImageAndName\\UserImageAndName.tsx",[],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\config\\secret.ts",[],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\shared\\UserImageAndName\\UserProfile.tsx",[],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\shared\\Material-UI\\Button.tsx",[],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\pages\\Home.tsx",[],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Modal\\Modal.tsx",["78"],"import React, { useCallback, useEffect, MouseEvent, useRef, useState, memo } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { unsplashApi } from '../../../axios/axios';\r\nimport UserImageAndName from '../../shared/UserImageAndName/UserImageAndName';\r\nimport PhotoFooter from './PhotoFooter';\r\nimport PhotoMiddle from './PhotoMiddle';\r\nimport RelatedCollections from './RelatedCollections';\r\n\r\nconst S = {\r\n  Modal: styled.div<{ top: number }>`\r\n    position: absolute;\r\n    top: ${({ top }) => top}px;\r\n    z-index: 2;\r\n    width: 100%;\r\n    height: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    overflow-y: scroll;\r\n    box-sizing: border-box;\r\n    padding: 40px 120px;\r\n    cursor: zoom-out;\r\n\r\n    @media (max-width: 1400px) {\r\n      padding: 40px 70px;\r\n    }\r\n    @media (max-width: 768px) {\r\n      padding: 0px;\r\n    }\r\n  `,\r\n\r\n  ModalBox: styled.div`\r\n    width: 100%;\r\n    background-color: white;\r\n    border-radius: 3px;\r\n    cursor: default;\r\n    display: flex;\r\n    flex-direction: column;\r\n  `,\r\n\r\n  PhotoHeader: styled.div`\r\n    position: sticky;\r\n    top: -40px;\r\n    background-color: white;\r\n\r\n    @media (max-width: 768px) {\r\n      top: 0px;\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props {}\r\n\r\ninterface LocationProps {\r\n  photoId: string;\r\n}\r\n\r\ninterface PhotoProps {\r\n  user: {\r\n    profile_image: { small: string };\r\n    name: string;\r\n  };\r\n  urls: { full: string };\r\n  color: string;\r\n  alt_description: string;\r\n  location: { title: string };\r\n  description: string;\r\n  related_collections: {\r\n    results: {\r\n      id: string;\r\n      title: string;\r\n      total_photos: number;\r\n      user: { name: string };\r\n      tags: { title: string }[];\r\n      preview_photos: {\r\n        id: string;\r\n        urls: { full: string };\r\n      }[];\r\n    }[];\r\n  };\r\n}\r\n\r\nconst Modal: React.FC<Props> = () => {\r\n  const [scrollTop, setScrollTop] = useState(() => window.scrollY);\r\n  const [photo, setPhoto] = useState<PhotoProps>();\r\n  const history = useHistory();\r\n  const modalRef = useRef<HTMLDivElement | null>(null);\r\n  const location = useLocation<LocationProps>();\r\n\r\n  const handleResize = useCallback(\r\n    (n: number) => {\r\n      setScrollTop(n);\r\n    },\r\n    [setScrollTop]\r\n  );\r\n\r\n  useEffect(() => {\r\n    async function getUnsplashPhotoById() {\r\n      const { data } = await unsplashApi.getPhotoById(location.state.photoId);\r\n\r\n      setPhoto(data);\r\n    }\r\n    getUnsplashPhotoById();\r\n\r\n    document.body.style.overflowY = 'hidden';\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('resize', () => handleResize(window.scrollY));\r\n    return () => {\r\n      window.removeEventListener('resize', () => handleResize(window.scrollY));\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      document.body.style.overflowY = 'scroll';\r\n    };\r\n  }, []);\r\n\r\n  function handleKeyDown(e: KeyboardEvent) {\r\n    if (e.key !== 'Escape') return;\r\n    history.goBack();\r\n  }\r\n\r\n  function handleModalClick(e: MouseEvent<HTMLDivElement>) {\r\n    if (e.target !== modalRef.current) return;\r\n    history.goBack();\r\n  }\r\n\r\n  return (\r\n    <S.Modal ref={modalRef} onClick={handleModalClick} top={scrollTop}>\r\n      <S.ModalBox>\r\n        <S.PhotoHeader>\r\n          {photo && (\r\n            <UserImageAndName userImageURL={photo.user.profile_image.small} userName={photo.user.name} blackOption />\r\n          )}\r\n        </S.PhotoHeader>\r\n        {photo && (\r\n          <PhotoMiddle imageURL={photo.urls.full} color={photo.color} alt_description={photo.alt_description} />\r\n        )}\r\n        {photo && <PhotoFooter location={photo.location.title} description={photo.description} />}\r\n        {photo && <RelatedCollections collections={photo.related_collections.results} />}\r\n      </S.ModalBox>\r\n    </S.Modal>\r\n  );\r\n};\r\n\r\nexport default memo(Modal);\r\n","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Modal\\PhotoMiddle.tsx",["79"],"import React, { memo, useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst S = {\r\n  PhotoMiddle: styled.div<{ isZoomIn: boolean }>`\r\n    padding: ${({ isZoomIn }) => (isZoomIn ? '10px 0px' : '10px 16px')};\r\n    display: grid;\r\n    place-items: center center;\r\n\r\n    @media (max-width: 768px) {\r\n      padding: 0px;\r\n    }\r\n  `,\r\n\r\n  ImageWrapper: styled.div<{ isLoading: boolean; color: string | undefined }>`\r\n    background-color: ${({ isLoading, color }) => isLoading && color};\r\n  `,\r\n\r\n  Image: styled.img<{ isLoading: boolean; isZoomIn: boolean }>`\r\n    max-width: 100%;\r\n    object-fit: contain;\r\n    max-height: ${({ isZoomIn }) => (isZoomIn ? 'none' : '770px')};\r\n    opacity: ${(props) => (props.isLoading ? '0' : '1')};\r\n    cursor: ${({ isZoomIn }) => (isZoomIn ? 'zoom-out' : 'zoom-in')};\r\n\r\n    @media (max-width: 768px) {\r\n      width: 100%;\r\n      max-height: none;\r\n      height: auto;\r\n    }\r\n  `,\r\n};\r\n\r\ninterface Props {\r\n  color: string;\r\n  imageURL: string;\r\n  alt_description: string;\r\n}\r\n\r\nconst PhotoMiddle: React.FC<Props> = ({ color, imageURL, alt_description }) => {\r\n  const imageRef = useRef<HTMLImageElement | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [zoomIn, setZoomIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    imageRef.current?.addEventListener('load', handleLoad);\r\n\r\n    return () => {\r\n      imageRef.current?.removeEventListener('load', handleLoad);\r\n    };\r\n  }, []);\r\n\r\n  function handleLoad() {\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <S.PhotoMiddle isZoomIn={zoomIn}>\r\n      <S.ImageWrapper isLoading={loading} color={color}>\r\n        <S.Image\r\n          onClick={() => setZoomIn((zoomIn) => !zoomIn)}\r\n          isLoading={loading}\r\n          isZoomIn={zoomIn}\r\n          ref={imageRef}\r\n          src={imageURL}\r\n          alt={alt_description}\r\n        />\r\n      </S.ImageWrapper>\r\n    </S.PhotoMiddle>\r\n  );\r\n};\r\n\r\nexport default memo(PhotoMiddle);\r\n","C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Modal\\PhotoFooter.tsx",[],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Modal\\RelatedCollections.tsx",[],"C:\\Users\\mass2\\Desktop\\react\\react-typescript\\app\\src\\components\\layout\\Modal\\Collection.tsx",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":66,"column":6,"nodeType":"86","endLine":66,"endColumn":27,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"88","line":75,"column":16,"nodeType":"89","endLine":75,"endColumn":23},{"ruleId":"84","severity":1,"message":"90","line":113,"column":6,"nodeType":"86","endLine":113,"endColumn":8,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"88","line":49,"column":16,"nodeType":"89","endLine":49,"endColumn":23},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.","ArrayExpression",["94"],"The ref value 'imageRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'imageRef.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","React Hook useEffect has missing dependencies: 'handleKeyDown', 'handleResize', and 'location.state.photoId'. Either include them or remove the dependency array.",["95"],"no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},{"desc":"98","fix":"99"},"Update the dependencies array to be: [photos, currentPage, options]",{"range":"100","text":"101"},"Update the dependencies array to be: [handleKeyDown, handleResize, location.state.photoId]",{"range":"102","text":"103"},[1702,1723],"[photos, currentPage, options]",[2892,2894],"[handleKeyDown, handleResize, location.state.photoId]"]